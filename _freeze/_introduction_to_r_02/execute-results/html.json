{
  "hash": "13df31909d90bc982ea1217227ac41fa",
  "result": {
    "markdown": "---\nformat:\n  html: \n    theme: darkly\n    fig-width: 8\n    fig-height: 4\n    code-fold: true\n    code-link: true\n    highlight-style: dracula\n    code-line-numbers: true\n    code-block-border-left: true\n    code-tools:\n      source: true\n      toggle: false\n      caption: none\n---\n\n\n# Vectors \n\n## Create a vector\n\nFeeling lucky? You better, because this chapter takes you on a trip to the City\nof Sins, also known as Statisticians Paradise!\n\nThanks to R and your new data-analytical skills, you will learn how to uplift\nyour performance at the tables and fire off your career as a professional\ngambler. This chapter will show how you can easily keep track of your betting\nprogress and how you can do some simple analyses on past actions. Next stop,\nVegas Babyâ€¦ VEGAS!!\n\n### Instructions `100 XP` {.unnumbered}\n\n* Do you still remember what you have learned in the first chapter? Assign the\nvalue `\"Go!\"` to the variable vegas. Remember: R is case sensitive!\n\n```{.r filename=\"ex_08.R\"}\n# Define the variable vegas\nvegas <- \"Go!\"\n```\n\n## Create a vector (2)\n\nLet us focus first!\n\nOn your way from rags to riches, you will make extensive use of vectors.\nVectors are one-dimension arrays that can hold numeric data, character data,\nor logical data. In other words, a vector is a simple tool to store data.\nFor example, you can store your daily gains and losses in the casinos.\n\nIn R, you create a vector with the combine function `c()`.\nYou place the vector elements separated by a comma between the parentheses.\n\n:::{.callout-note}\n\n## For example:\n\n```{.r}\nnumeric_vector <- c(1, 2, 3)\ncharacter_vector <- c(\"a\", \"b\", \"c\")\n```\n:::\nOnce you have created these vectors in R, you can use them to do calculations.\n\n#### Instructions `100 XP` {.unnumbered}\nComplete the code such that boolean_vector contains the three elements:\n`TRUE, `FALSE` and `TRUE` (in that order).\n\n```{.r filename=\"ex_09.R\"}\nnumeric_vector <- c(1, 10, 49)\ncharacter_vector <- c(\"a\", \"b\", \"c\")\n\n# Complete the code for boolean_vector\nboolean_vector <-c(TRUE, FALSE, TRUE)\n```\n### Create a vector (3) \n\nAfter one week in Las Vegas and still zero Ferraris in your garage, you decide\nthat it is time to start using your data analytical superpowers.\n\nBefore doing a first analysis, you decide to first collect all the winnings and\nlosses for the last week:\n\nFor poker_vector:\n\n* On Monday you won `$140`\n* Tuesday you lost `$50`\n* Wednesday you won `$20`\n* Thursday you lost `$120`\n* Friday you won `$240`\n\nFor roulette_vector:\n\n* On Monday you lost `$24`\n* Tuesday you lost `$50`\n* Wednesday you won `$100`\n* Thursday you lost `$350`\n* Friday you won `$10`\n\nYou only played poker and roulette, since there was a delegation of mediums that\noccupied the craps tables. To be able to use this data in R, you decide to\ncreate the variables poker_vector and roulette_vector.\n\n#### Instructions `100 XP` {.unnumbered}\n\nAssign the winnings/losses for roulette to the variable roulette_vector.\nYou lost `$24`, then lost `$50` , won `$100`, lost `$350`, and won `$10`.\n\n```{.r filename=\"ex_10.R\"}\n# Poker winnings from Monday to Friday\npoker_vector <- c(140, -50, 20, -120, 240)\n\n# Roulette winnings from Monday to Friday\nroulette_vector <- c(-24, -50, 100, -350, 10)\n```\n\n### Naming a vector\n\nAs a data analyst, it is important to have a clear view on the data that you are\nusing. Understanding what each element refers to is therefore essential.\n\nIn the previous exercise, we created a vector with your winnings over the week.\nEach vector element refers to a day of the week but it is hard to tell which\nelement belongs to which day. It would be nice if you could show that in the\nvector itself.\n\nYou can give a name to the elements of a vector with the `names()` function.\nHave a look at this example:\n\n```{.r}\n#| code-line-numbers: false\n#| code-fold: false\n#| code-summary: \"Show the code\"\n\nsome_vector <- c(\"John Doe\", \"poker player\")\nnames(some_vector) <- c(\"Name\", \"Profession\")\n```\n\n\nThis code first creates a vector some_vector and then gives the two elements a\nname. The first element is assigned the name Name, while the second element is\nlabeled Profession. Printing the contents to the console yields following output:\n\n:::{.callout-note collapse=\"true\"}\n## Output\n          Name     Profession\n    \"John Doe\" \"poker player\"\n:::\n\n#### Instructions `100 XP` {.unnumbered}\n\nThe code in the editor names the elements in `poker_vector` with the days of the\nweek. Add code to do the same thing for `roulette_vector`.\n\n```{.r filename=\"ex_11.R\"}\n# Poker winnings from Monday to Friday\npoker_vector <- c(140, -50, 20, -120, 240)\n\n# Roulette winnings from Monday to Friday\nroulette_vector <- c(-24, -50, 100, -350, 10)\n\n# Assign days as names of poker_vector\nnames(poker_vector) <-\n  c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n\n# Assign days as names of roulette_vector\n\nnames(roulette_vector) <-\n  c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n```\n\n## Naming a vector (2)\n\nIf you want to become a good statistician, you have to become lazy.\n(If you are already lazy, chances are high you are one of those exceptional,\nnatural-born statistical talents.)\n\nIn the previous exercises you probably experienced that it is boring and\nfrustrating to type and retype information such as the days of the week.\nHowever, when you look at it from a higher perspective, there is a more\nefficient way to do this, namely, to assign the days of the week vector to a\n **variable**!\n\nJust like you did with your poker and roulette returns, you can also create a\nvariable that contains the days of the week. This way you can use and re-use it.\n\n#### Instructions `100 XP` {.unnumbered}\n\n- A variable days_vector that contains the days of the week has already been\ncreated for you.\n\n- Use `days_vector` to set the names of `poker_vector` and `roulette_vector`.\n\n```{.r filename=\"ex_12.R\"}\n# Poker winnings from Monday to Friday\npoker_vector <- c(140, -50, 20, -120, 240)\n\n# Roulette winnings from Monday to Friday\nroulette_vector <- c(-24, -50, 100, -350, 10)\n\n# The variable days_vector\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\n\n# Assign the names of the day to roulette_vector and poker_vector\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n```\n##  Calculating total winnings\n\nNow that you have the poker and roulette winnings nicely as named vectors, you\n can start doing some data analytical magic.\n\nYou want to find out the following type of information:\n\n- How much has been your overall profit or loss per day of the week?\n- Have you lost money over the week in total?\n- Are you winning/losing money on poker or on roulette? To get the answers, you\nhave to do arithmetic calculations on vectors.\n\nIt is important to know that if you sum two vectors in R, it takes the\nelement-wise sum. For example, the following three statements are completely\nequivalent:\n\n\n::: {.cell}\n\n:::\n\n\nYou can also do the calculations with variables that represent vectors:\n\n\n::: {.cell}\n\n:::\n\n\n#### Instructions `100 XP` {.unnumbered}\n\n- Take the sum of the variables `A_vector` and `B_vector` and assign it to\ntotal_vector.\n- Inspect the result by printing out `total_vector`.\n\n```{.r filename=\"ex_13.R\"}\nA_vector <- c(1, 2, 3)\nB_vector <- c(4, 5, 6)\n\n# Take the sum of A_vector and B_vector\ntotal_vector <- A_vector + B_vector\n\n# Print out total_vector\nprint(total_vector)\n```\n\n## Calculating total winnings (2)\n\nNow you understand how R does arithmetic with vectors, it is time to get those\nFerraris in your garage! First, you need to understand what the overall profit\nor loss per day of the week was. The total daily profit is the sum of the\n`profit / loss` you realized on poker per day, and the `profit / loss` you\nrealized on roulette per day.\n\nIn R, this is just the sum of `roulette_vector` and `poker_vector`.\n\n#### Instructions `100 XP` {.unnumbered}\n\nAssign to the variable `total_daily` how much you won or lost on each day in\ntotal (poker and roulette combined).\n\n```{.r filename=\"ex_14.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Assign to total_daily how much you won/lost on each day\ntotal_daily <- roulette_vector + poker_vector\n```\n\n## Calculating total winnings (3)\n\nBased on the previous analysis, it looks like you had a mix of good and bad\ndays. This is not what your ego expected, and you wonder if there may be a very\ntiny chance you have lost money over the week in total?\n\nA function that helps you to answer this question is `sum()`. It calculates the\nsum of all elements of a vector. For example, to calculate the total amount of\nmoney you have lost/won with poker you do:\n\n```{.r}\ntotal_poker <- sum(poker_vector)\n```\n\n#### Instructions `100 XP` {.unnumbered}\n\n- Calculate the total amount of money that you have won/lost with roulette and\nassign to the variable `total_roulette`.\n- Now that you have the totals for roulette and poker, you can easily calculate\n`total_week` (which is the sum of all gains and losses of the week).\n- Print out `total_week`.\n\n```{.r filename=\"ex_15.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Total winnings with poker\ntotal_poker <- sum(poker_vector)\n\n# Total winnings with roulette\ntotal_roulette <-  sum(roulette_vector)\n\n# Total winnings overall\ntotal_week <- total_poker + total_roulette\n\n# Print out total_week\nprint(total_week)\n```\n\n## Comparing total winnings\n\nOops, it seems like you are losing money. Time to rethink and adapt your\nstrategy! This will require some deeper analysisâ€¦\n\nAfter a short brainstorm in your hotel's jacuzzi, you realize that a possible\nexplanation might be that your skills in roulette are not as well developed as\nyour skills in poker. So maybe your total gains in poker are higher (or `>` )\nthan in roulette.\n\n### Instructions `100 XP` {.unnumbered}\n\n- Calculate `total_poker` and `total_roulette` as in the previous exercise.\nUse the `sum()` function twice.\n- Check if your total gains in poker are higher than for roulette by using a\ncomparison. Simply print out the result of this comparison. What do you\nconclude, should you focus on roulette or on poker?\n\n```{.r filename=\"ex_16.R\"}\n\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Calculate total gains for poker and roulette\ntotal_poker <- sum(poker_vector)\ntotal_roulette <- sum(roulette_vector)\n\n# Check if you realized higher total gains in poker than in roulette\n\nprint(total_poker > total_roulette)\n```\n## Vector selection: the good times\n\nYour hunch seemed to be right. It appears that the poker game is more your cup \nof tea than roulette.\n\nAnother possible route for investigation is your performance at the beginning \nof the working week compared to the end of it. You did have a couple of \nMargarita cocktails at the end of the weekâ€¦\n\nTo answer that question, you only want to focus on a selection of the \n`total_vector`. In other words, our goal is to select specific elements of the \nvector. To select elements of a vector (and later matrices, data frames, â€¦), \nyou can use square brackets. Between the square brackets, you indicate what \nelements to select. For example, to select the first element of the vector, you \ntype `poker_vector[1]`. To select the second element of the vector, you type \n`poker_vector[2]`, etc. Notice that the first element in a vector has index 1, \nnot 0 as in many other programming languages.\n\n### Instructions 100 XP {.unnumbered}\nAssign the poker results of Wednesday to the variable `poker_wednesday`.\n\n```{.r filename=ex_17.R}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Define a new variable based on a selection\npoker_wednesday <- poker_vector[3]  \n```\n\n## Vector selection: the good times (2)\nHow about analyzing your midweek results?\n\nTo select multiple elements from a vector, you can add square brackets at the \nend of it. You can indicate between the brackets what elements should be \nselected. For example: suppose you want to select the first and the fifth day \nof the week: use the vector `c(1, 5)` between the square brackets. For example, \nthe code below selects the first and fifth element of poker_vector:\n\n\n```{.r code-line-numbers=false}\npoker_vector[c(1, 5)]\n```\n\n### Instructions `100 XP` {.unnumbered}\n\nAssign the poker results of Tuesday, Wednesday and Thursday to the variable \n`poker_midweek`.\n\n```{.r filename=\"ex_18.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Define a new variable based on a selection\npoker_midweek <- poker_vector[c(2, 3, 4)]\n```\n\n## Vector selection: the good times (3)\n\nSelecting multiple elements of poker_vector with \n`c(2, 3, 4)` is not very convenient. Many statisticians are lazy \npeople by nature, so they created an easier way to do this: \n`c(2, 3, 4)` can be abbreviated  to `2:4`, which generates a vector \nwith all natural numbers from 2 up to 4.\n\nSo, another way to find the mid-week results is \n`poker_vector[2:4]`. Notice how the vector `2:4` is placed between the square \nbrackets to select element 2 up to 4.\n\n### Instructions `100 XP` {.unnumbered}\nAssign to `roulette_selection_vector` the roulette results from Tuesday up to Friday; make use of : if it makes things easier for you.\n\n```{.r filename=\"ex_19.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Define a new variable based on a selection\nroulette_selection_vector <- roulette_vector[2:5]\n```\n\n## Vector selection: the good times (4)\n\nAnother way to tackle the previous exercise is by using the names of \nthe vector elements (Monday, Tuesday, â€¦) instead of their numeric \npositions. For example,\n\n```{.r code-line-numbers=false}\npoker_vector[c(\"Monday\"]\n```\nwill select the first element of poker_vector since \"Monday\" is the \nname of that first element.\n\nJust like you did in the previous exercise with numerics, you can \nalso use the element names to select multiple elements, for example:\n\n```{.r code-line-numbers=false}\npoker_vector[c(\"Monday\",\"Tuesday\")]\n```\n\n### Instructions `100 XP` {.unnumbered}\n\n- Select the first three elements in `poker_vector` by using their \nnames: `\"Monday\"`, `\"Tuesday\"` and `\"Wednesday\"`. Assign the result of the \nselection to `poker_start`.\n- Calculate the average of the values in `poker_start` with the ` mean()` function. Simply print out the result so you can inspect it.\n\n```{.r filename=\"ex_20.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Select poker results for Monday, Tuesday and Wednesday\npoker_start <- poker_vector[c(\"Monday\", \"Tuesday\", \"Wednesday\")]\n  \n# Calculate the average of the elements in poker_start\nmean(poker_start)\n```\n## Selection by comparison - Step 1\n\nBy making use of comparison operators, we can approach the previous question in \na more proactive way.\n\nThe (logical) comparison operators known to R are:\n\n- `<` for less than\n- `>` for greater than\n- `<=` for less than or equal to\n- `>=` for greater than or equal to\n- `==` for equal to each other\n- `!=` not equal to each other\n\nAs seen in the previous chapter, stating 6 > 5 returns TRUE. The nice thing \nabout R is that you can use these comparison operators also on vectors. For \nexample:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE  TRUE\n```\n:::\n:::\n\n\n\nThis command tests for every element of the vector if the condition stated \nby the comparison operator is `TRUE` or `FALSE`.\n\n### Instructions `100 XP` {.unnumbered}\n\n- Check which elements in `poker_vector` are positive (i.e. `> 0`) and assign \nthis to selection_vector.\n- Print out selection_vector so you can inspect it. The printout tells you whether you won `(TRUE)` or lost `(FALSE)` any money for each day.\n\n```{.r filename=\"ex_21.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Which days did you make money on poker?\nselection_vector <- \n    poker_vector > 0\n  \n# Print out selection_vector\nprint(selection_vector)\n```\n\n## Selection by comparison - Step 2\n\nWorking with comparisons will make your data analytical life easier. Instead of \nselecting a subset of days to investigate yourself (like before), you can simply \nask R to return only those days where you realized a positive return for poker.\n\nIn the previous exercises you used `selection_vector <- poker_vector > 0` \nto find  the days on which you had a positive poker return. Now, you would like \nto know not only the days on which you won, but also how much you won on those \ndays.\n\nYou can select the desired elements, by putting `selection_vector` between the \nsquare brackets that follow poker_vector:\n```{.r code-line-numbers=false}\npoker_vector[selection_vector]\n```\n\nR knows what to do when you pass a logical vector in square brackets: it will \nonly select the elements that correspond to `TRUE` in `selection_vector`.\n\n### Instructions `100 XP` {.unnumbered}\n\nUse `selection_vector` in square brackets to assign the amounts that you won on \nthe profitable days to the variable `poker_winning_days`.\n\n```{.r filename=\"ex_22.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Which days did you make money on poker?\nselection_vector <- poker_vector > 0\n\n# Select from poker_vector these days\npoker_winning_days <- poker_vector[selection_vector]\n```\n## Advanced selection\nJust like you did for poker, you also want to know those days where you realized \na positive return for roulette.\n\n### Instructions `100 XP`{.unnumbered}\n\n- Create the variable selection_vector, this time to see if you made profit with \nroulette for different days.\n- Assign the amounts that you made on the days that you ended positively for \nroulette to the variable roulette_winning_days. This vector thus contains the \npositive winnings of roulette_vector.\n\n```{.r filename=\"ex_23.R\"}\n# Poker and roulette winnings from Monday to Friday:\npoker_vector <- c(140, -50, 20, -120, 240)\nroulette_vector <- c(-24, -50, 100, -350, 10)\ndays_vector <- c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")\nnames(poker_vector) <- days_vector\nnames(roulette_vector) <- days_vector\n\n# Which days did you make money on roulette?\nselection_vector <- roulette_vector > 0\n\n# Select from roulette_vector these days\nroulette_winning_days <- roulette_vector[selection_vector]\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}